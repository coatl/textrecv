#!/bin/bash
#small script to generate a pgp/gpg key using gpg2.
#uses known best parameters for generating the key. (no old/broken algos.)
#one parameter is required: the name of the key to be generated.
#designed for generating keys for use by textrecv, but could serve as a
#starting point for generating keys for other purposes.

#CAVEATS: (important, please read)
  #key is suitable for signing ONLY. not an encryption key. this will not
    #keep your data secret, only ensure it is unmodified.
    #easily enough changed by tweaking Key-Usage below.
  #expire date set is far in the future. this may not be what you want.


gpgname="$1"

if [ -z "$gpgname" ]; then
  echo ERROR: required param: key name
  exit 1
fi

gpg2 --gen-key --batch --no-tty <<END
Key-Type: RSA
Key-Length: 4096
Key-Usage: sign
Name-Real: $gpgname
Name-Comment: $gpgname
Name-Email: no.actual@email
Expire-Date: 2104-12-31
Preferences: SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
%echo generating key; you may need to move the mouse a bunch to produce enough entropy
END

    echo now move the $gpgname private key onto the corresponding textsend system
    echo private key can be exported by running:
    echo "  "gpg2 --export-secret-keys $gpgname \> secret.key
    echo public key can be exported by running:
    echo "  "gpg2 --export $gpgname \> public.key

